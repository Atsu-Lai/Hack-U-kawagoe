<!DOCTYPE HTML>
<html>
<head>
  <title>ホーム</title>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <link href="https://use.fontawesome.com/releases/v5.6.1/css/all.css" rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="style.css">
  <script src="https://code.jquery.com/jquery-1.11.1.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    var socketio = io();
    var myname = "";
    var firstlist = [];
    var watchlist = [];
    var userlist = [];
    var user_status = [];
    var status_list = [];
    var status_flag = 0;
    var connectid;
    var connectname;
    var req = ["その他","起こして","座りたい"];
    $(function(){
      $('#get_location').click(() => {
        watch_start(); 
        $('#start').hide();
        $('#list_info').show();

        navigator.geolocation.getCurrentPosition((position) => {
          myname = $('#text').val()
          var ido = position.coords.latitude
          var keido = position.coords.longitude
          var date = new Date(position.timestamp);
          date.setTime(date.getTime() + 1000*60*60*9);
          var datemax = new Date(date.getTime() + 1000*60*3);
          var datemin = new Date(date.getTime() - 1000*60*3);
          socketio.emit("first_location", {name:myname,ido:ido,keido:keido,time:date,timemax:datemax,timemin:datemin});
        });
      })

      $('#send_message').click(() =>{
        var msg = $('#chat_message').val();
        $('#chat_message').val('');
        socketio.emit("chat_message", {sid:connectid,myname:myname,cname:connectname,msg:msg})
      })

      socketio.on('revers_message', (data) =>{
        $('#messages').append(data.val);
      })

      $('#homelink').click(() => {
        $('#list_info').hide();
        $("#chat_room").hide();
        $('#start').show();
      })

      $('#chatlink').click(() => {
        $('#list_info').hide();
        $('#start').hide();
        $("#chat_room").show();
      })

      $('#listlink').click(() => {
        $('#start').hide();
        $("#chat_room").hide();
        $('#list_info').show();
      })

      
    });
    
    socketio.on('first_list', (data) => {
      var val = data.val;
      firstlist = [];
      
      for(var i in val){
        if(data.sid != val[i].sid){
          firstlist.push({
            sid:val[i].sid,
            name:val[i].name,
            ido:val[i].ido,
            keido:val[i].keido,
            direction:val[i].direction,
            time:val[i].time,
          });
        }
      }
      //testmuch();
    });

    socketio.on('first_list2', (data) => {
      firstlist.push(data.val);
      //testmuch();
    });


    var num = 0;
    var watch_id;
    function watch_start(){
      console.log('watch start');
      $('#watch_list').show();
      watch_id = navigator.geolocation.watchPosition(watch, function(e) { alert(e.message); }, {"enableHighAccuracy": true, "timeout": 20000, "maximumAge": 2000}); 
    }
    function watch(position) {
     if((position.coords.speed >= 4) && (num <=5)){  
        var name = $('#text').val()
        var ido = position.coords.latitude;
        var keido = position.coords.longitude;
        var direction = position.coords.heading;
        var date = new Date(position.timestamp);
        date.setTime(date.getTime() + 1000*60*60*9);
        var datemax = new Date(date.getTime() + 1000*60*3);
        var datemin = new Date(date.getTime() - 1000*60*3);
        socketio.emit("watch_location", {name:name,ido:ido,keido:keido,direction:direction,time:date,timemax:datemax,timemin:datemin});
        num++;
      }
    }

    socketio.on('watch_list', (data) => {
      var val = data.val;
      watchlist = [];
      for(var i in val){
        if(data.sid != val[i].sid){
          watchlist.push({
            sid:val[i].sid,
            name:val[i].name,
            ido:val[i].ido,
            keido:val[i].keido,
            direction:val[i].direction,
            time:val[i].time,
          });
        }  
      }
      matching();
    });

    socketio.on('watch_list2', (data) => {
      watchlist.push(data.val);
      matching();
    });
    
    function matching(){
      for(var i in firstlist){
        for(var j in watchlist){
          if(firstlist[i].sid == watchlist[j].sid){
            userlist.push(firstlist[i]);
            break;
          }
        }
      }
      userlist = userlist.filter((v1,i1,a1) => {
        return(a1.findIndex(function(v2){
          return (v1.sid === v2.sid)
        }) === i1);
      });
      console.log(userlist);
      
      send_status()
    }
    
    

    socketio.on('errors', (data) =>{
      console.log(data.er);
    });
    

    function watch_start(){
        console.log('watch start');
        watch_id = navigator.geolocation.watchPosition(watch, function(e) { alert(e.message); }, {"enableHighAccuracy": true, "timeout": 20000, "maximumAge": 2000});
    }

    function watch(position) {
        if(position.coords.heading == null){
            var name = $('#text').val()
            var ido = position.coords.latitude;
            var keido = position.coords.longitude;
            var direction = 2;
            var date = new Date(position.timestamp);  
            date.setTime(date.getTime() + 1000*60*60*9);
            var datemax = new Date(date.getTime() + 1000*60*3);
            var datemin = new Date(date.getTime() - 1000*60*3);
            socketio.emit("watch_location", {name:name,ido:ido,keido:keido,direction:direction,time:date,timemax:datemax,timemin:datemin});
        }
    }
    
    function make_chat(data){
      var str = data.id; 
      connectid = str.slice(0,20);
      connectname = str.slice(20,);
      $('#connectid').text(connectname);
      console.log(connectid);
      console.log(connectname);
      $('#list_info').hide();
      $("#chat_room").show();
    }

    function set_status(){
      var trainNa = $('#train_select').val();
      var request = $('#request_select').val();
      var comment = $('#status_comment').val();
      var time = new Date();
      console.log(request);
      user_status = [];
      user_status.push({
        tna:trainNa,
        req:request,
        com:comment,
        name:myname,
        time:time
      });
      status_flag = 1;
      console.log(user_status);
      send_status();
      //socketio.emit('set_status', {tna:trainNa, req:request, com:comment, name:myname, time:time});
    }

    function send_status(){
      if(status_flag === 1){
        var us = user_status[0];
        for(var i in userlist){
          socketio.emit('send_status',{tna:us.tna, req:us.req, com:us.com, name:us.name, tiem:us.time, sid:userlist[i].sid});
        }
      }
    }

    socketio.on('status_list', (data) => {
      console.log(data);
      status_list.unshift(data);
      status_list = status_list.filter((v1,i1,a1) => {
        return(a1.findIndex(function(v2){
          return (v1.sid === v2.sid)
        }) === i1);
      });
      console.log(status_list);
      var list = ""
      for(var i in status_list){
          list += "<li class='status'><span class='li_name'>@" + status_list[i].name + "</span><span class='train_na'>" + status_list[i].tna +"号車</span>" + 
                  "リクエスト:" + "<span class='req'>" + req[(status_list[i].req)-1] + "</span><br>" + 
                  "<span class='comment'>" + status_list[i].com + "</span>" + 
                  "<a href='#' id ='" + status_list[i].sid + status_list[i].name + "' onclick='make_chat(this)'></a></li>"
      }
      $('#watch_list').html(list);
    })

    function set_chatid(data){
      var str = data.id;
      connectid = str.slice(0,20);
      connectname = str.slice(20,);
      $('#connectid').text(connectname);
    }
  </script>
</head>
<body>
  <div id="wrapper">
    <div id="header">
      <h1>T-con！</h1>
    </div>
    <div id="main">
       <div id="start">
         <input type="text" id="text" value=""><br>
         <button id="get_location" class="submit" style="font-size: 30px">開始する</button>
       </div>
       <div id="list_info" style="display:none"><!-- 仮 -->
         <ul id="watch_list">
         </ul>
         <div id="status_form">
           <p>
              号車選択：
              <select id="train_select">
                <% for(var i=1; i<=20; i++){ %>
                  <%- include('option', {val:i}) %>
                <% } %>
              </select>
           </p>
           <p>
             リクエスト：
             <select id="request_select">
               <option value="1">その他</option>
               <option value=2>起こして</option>
               <option value=3>座りたい</option>
             </select>
           </p>
           <p>
             コメント：
             <textarea id="status_comment"></textarea>
           </p>
           <button id="send_status" class="submit" onclick="set_status()">送信</button>
         </div>
       </div>
       <div id="chat_room" style="display: none">
         <ul id="messages"></ul>
         <div id="textbox">
          <p>to -> <span id="connectid">undefind</span></p>
          <input type="text" id="chat_message">
          <input type="submit" id="send_message" value="send">
         </div>
       </div>
    </div>
    <div id="nav">
        <ul class="nav_item">
          <li name="home"><a href="#" id="homelink"><i class="fas fa-home"></i></a></li>
          <li name="bbs"><a href="#" id="listlink"><i class="fas fa-train"></i></a></li>
          <li name="chat"><a href="#" id="chatlink"><i class="fas fa-comments"></i></a></li>
          <li name="profile"><a href="/profile"><i class="fas fa-user"></i></a></li>
        </ul>
    </div>
  </div>
</body>
</html>
